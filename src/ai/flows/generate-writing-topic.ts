// This file is generated by Firebase Genkit.
'use server';
/**
 * @fileOverview Generates IELTS writing topics for Task 1 and Task 2.
 *
 * - generateWritingTopic - A function that generates an IELTS writing topic.
 * - GenerateWritingTopicInput - The input type for the generateWritingTopic function.
 * - GenerateWritingTopicOutput - The return type for the generateWritingTopic function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateWritingTopicInputSchema = z.object({
  task: z.enum(['Task 1', 'Task 2']).describe('The writing task type.'),
  trainingType: z.enum(['Academic', 'General Training']).describe('The type of IELTS training.'),
  topic: z.string().optional().describe('An optional user-provided topic or keywords.'),
});
export type GenerateWritingTopicInput = z.infer<typeof GenerateWritingTopicInputSchema>;


const GenerateWritingTopicOutputSchema = z.object({
    topic: z.string().describe("The generated essay topic or question. This should be formatted in HTML. For Task 1, this should describe the chart or data. For Task 2, this is the essay prompt."),
    instructions: z.string().describe("Specific instructions for the task, formatted in HTML. For example, 'Summarise the information by selecting and reporting the main features, and make comparisons where relevant' for Task 1, or 'Give reasons for your answer and include any relevant examples from your own knowledge or experience.' for Task 2."),
});
export type GenerateWritingTopicOutput = z.infer<typeof GenerateWritingTopicOutputSchema>;


export async function generateWritingTopic(
  input: GenerateWritingTopicInput
): Promise<GenerateWritingTopicOutput> {
  return generateWritingTopicFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateWritingTopicPrompt',
  input: {schema: GenerateWritingTopicInputSchema},
  output: {schema: GenerateWritingTopicOutputSchema},
  prompt: `You are an expert IELTS exam creator. Your task is to generate a writing prompt for the specified task and training type.

Task: {{{task}}}
Training Type: {{{trainingType}}}
User-provided Topic (if any): {{{topic}}}

Instructions:
- For Task 1 (Academic): Generate a description of a chart, graph, table, or diagram. The topic should be suitable for data visualization (e.g., population trends, economic data, process diagrams). The instruction should be "Summarise the information by selecting and reporting the main features, and make comparisons where relevant."
- For Task 1 (General Training): Generate a situation for a letter. The topic should be a common, everyday scenario requiring a formal or semi-formal letter (e.g., complaining about a product, requesting information, applying for a part-time job). The instruction should be "Write at least 150 words. You do NOT need to write any addresses."
- For Task 2 (Academic & General Training): Generate an essay question that requires a discursive response. The topic should be of general interest and allow for discussion of different viewpoints. The instruction should be "Write at least 250 words. Give reasons for your answer and include any relevant examples from your own knowledge or experience."

If the user provides a topic, create a prompt related to it. If not, generate a random, high-quality topic appropriate for an IELTS exam.

Your entire response must be in a single JSON object that strictly follows the output schema. Format the 'topic' and 'instructions' fields as clean HTML.
`,
});

const generateWritingTopicFlow = ai.defineFlow(
  {
    name: 'generateWritingTopicFlow',
    inputSchema: GenerateWritingTopicInputSchema,
    outputSchema: GenerateWritingTopicOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
